version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    network_mode: host
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092

  kafka-2:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092

  kafka-3:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:39092

  timescale:
      image: 'timescale/timescaledb:latest-pg10'
      ports:
        - "5432:5432"
      environment:
        - POSTGRES_DB=chronos_ts
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres_password
      volumes:
        - ./db/setup_timescale.sql:/docker-entrypoint-initdb.d/setup_timescale.sql
        - ./db/postgres:/var/lib/postgresql/data

  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
    ports:
      - "3000:3000"

  consumer:
    environment:
      - PGUSER=postgres
      - PGHOST=timescale
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    build:
      dockerfile: Dockerfile.dev
      context: ./consumer
    volumes:
      - /app/node_modules
      - ./consumer:/app
